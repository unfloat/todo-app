name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend && npm ci

      - name: Run backend API tests with coverage
        run: |
          cd backend
          npm run test:coverage
        env:
          NODE_ENV: test
          JWT_SECRET: test-secret-key
          DB_PATH: ./test-db/test-ci.db

      - name: Run frontend unit tests with coverage
        run: |
          cd frontend
          npm run test:coverage

      - name: Start backend server for E2E tests
        run: |
          cd backend
          npm start &
          sleep 10
        env:
          NODE_ENV: test
          JWT_SECRET: test-secret-key
          DB_PATH: ./test-db/test-e2e.db

      - name: Start frontend server for E2E tests
        run: |
          cd frontend
          npm run build
          npm run preview &
          sleep 10

      - name: Run frontend E2E tests
        run: |
          cd frontend
          npm run test:e2e
        env:
          CYPRESS_baseUrl: http://localhost:4173
          CYPRESS_apiUrl: http://localhost:5000

      - name: Upload E2E test artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: frontend/cypress/screenshots/

      - name: Upload E2E test videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: frontend/cypress/videos/

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: |
            backend/coverage/
            frontend/coverage/

      - name: Download coverage reports
        if: github.event_name == 'pull_request'
        uses: actions/download-artifact@v4
        with:
          name: coverage-reports
          path: backend/coverage/

      - name: Comment PR with coverage
        if: github.event_name == 'pull_request'
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./backend/coverage/lcov.info
